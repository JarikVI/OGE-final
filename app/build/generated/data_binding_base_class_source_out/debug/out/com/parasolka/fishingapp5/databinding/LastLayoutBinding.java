// Generated by view binder compiler. Do not edit!
package com.parasolka.fishingapp5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.parasolka.fishingapp5.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LastLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView sfriendidlast;

  @NonNull
  public final CircleImageView sfriendimagelast;

  @NonNull
  public final LinearLayout sfriendlinearlast;

  @NonNull
  public final TextView sfriendnamelast;

  @NonNull
  public final MaterialButton sfriendsharelast;

  private LastLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView sfriendidlast,
      @NonNull CircleImageView sfriendimagelast, @NonNull LinearLayout sfriendlinearlast,
      @NonNull TextView sfriendnamelast, @NonNull MaterialButton sfriendsharelast) {
    this.rootView = rootView;
    this.sfriendidlast = sfriendidlast;
    this.sfriendimagelast = sfriendimagelast;
    this.sfriendlinearlast = sfriendlinearlast;
    this.sfriendnamelast = sfriendnamelast;
    this.sfriendsharelast = sfriendsharelast;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LastLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LastLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.last_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LastLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.sfriendidlast;
      TextView sfriendidlast = ViewBindings.findChildViewById(rootView, id);
      if (sfriendidlast == null) {
        break missingId;
      }

      id = R.id.sfriendimagelast;
      CircleImageView sfriendimagelast = ViewBindings.findChildViewById(rootView, id);
      if (sfriendimagelast == null) {
        break missingId;
      }

      id = R.id.sfriendlinearlast;
      LinearLayout sfriendlinearlast = ViewBindings.findChildViewById(rootView, id);
      if (sfriendlinearlast == null) {
        break missingId;
      }

      id = R.id.sfriendnamelast;
      TextView sfriendnamelast = ViewBindings.findChildViewById(rootView, id);
      if (sfriendnamelast == null) {
        break missingId;
      }

      id = R.id.sfriendsharelast;
      MaterialButton sfriendsharelast = ViewBindings.findChildViewById(rootView, id);
      if (sfriendsharelast == null) {
        break missingId;
      }

      return new LastLayoutBinding((RelativeLayout) rootView, sfriendidlast, sfriendimagelast,
          sfriendlinearlast, sfriendnamelast, sfriendsharelast);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
